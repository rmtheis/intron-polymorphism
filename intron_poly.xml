<!-- Galaxy Tool Definition File -->
<tool id="intron_poly" name="IntronPoly" version="0.1">
  <description></description>
  <version_command>ip_handler.pl --version</version_command>
  <command>
    ip_handler.pl 
      --ref-genome $refGenome 
      -1 $mate1s 
      -2 $mate2s 
      --output-file $outputFile
      --min-mates $minMates
      --min-contig-length $minContigLength
      --max-intron-length $maxIntronLength
      --minins $minins
      --maxins $maxins
      #if $fragLength.set == 'yes':
        --fragment-length ${fragLength.length}
      #end if
      #if $threads.set == 'yes':
        --num-threads ${threads.numThreads}
      #end if
      #if str($validateReads) == 'true':
        --validate-reads
      #end if
      #if $skipTo.step == 'collection':
        --skipTo C 
        --existing-align-file ${skipTo.existingAlignmentFile}
      #end if
      #if $skipTo.step == 'filtering':
        --skipTo F
        --existing-align-file ${skipTo.existingAlignmentFile}
        --existing-halfmap-file ${skipTo.existingHalfmapFile}
      #end if
      #if $skipTo.step == 'assembly':
        --skipTo A
        --existing-align-file ${skipTo.existingAlignmentFile}
        --existing-halfmap-file ${skipTo.existingHalfmapFile}
      #end if
      #if $skipTo.step == 'alignment':
        --skipTo L
        --existing-contigs-file ${skipTo.existingContigsFile}
      #end if
  </command>
  <inputs>
    <param format="fastqillumina" name="mate1s" type="data" label="FASTQ reads file (-1)" />
    <param format="fastqillumina" name="mate2s" type="data" label="FASTQ reads file (-2)" />
    <param format="fasta" name="refGenome" type="data" label="FASTA reference genome (-g)" />
    <conditional name="fragLength">
      <param name="set" type="select" label="Fragment length">
        <option value="no">Detect fragment length value</option>
        <option value="yes">Set fragment length</option>
      </param>
      <when value="yes">
        <param name="length" type="integer" value="200" label="Enter fragment length (-f)" />
      </when>
      <when value="no" />
    </conditional>
    <param name="minMates" type="integer" value="3" label="The minimum number of mates required to form a group in the grouping step in the pipeline. (-a)" />
    <param name="minContigLength" type="integer" value="16" label="The minimum contig length needed for assembline the mates in a group. This value is passed to the Taipan assembler. (-l)" />
    <param name="maxIntronLength" type="integer" value="250" label="The intron length value to use when looking for groups of introns near one another. This value contributes to a distance value
that determines whether mates are close enough together to form a group. (-m)" />
    <param name="minins" type="integer" value="0" label="The minimum fragment length for valid paired-end alignments. This value is passed to Bowtie for the initial mapping. (-I)" />
    <param name="maxins" type="integer" value="3000" label="The maximum fragment length for valid paired-end alignments. This value is passed to Bowtie for the initial mapping. (-X)" />
    <conditional name="threads">
      <param name="set" type="select" label="Number of threads (-p)">
        <option value="no">Run on all available cores (default)</option>
        <option value="yes">Set number of cores</option>
      </param>
      <when value="yes">
        <param name="numThreads" type="integer" value="4" label="Enter number of cores to use"/>
      </when>
      <when value="no" />
    </conditional>
    <param name="validateReads" type="boolean" truevalue="true" falsevalue="false" checked="no" label="Validate the FASTQ reads files? (--validate-reads)" help="" />
    <conditional name="skipTo">
      <param name="step" type="select" label="Run pipeline starting from">
        <option value="beginning">the beginning</option>
        <option value="collection">collection</option>
        <option value="filtering">filtering</option>
        <option value="assembly">assembly</option>
        <option value="alignment">alignment</option>
      </param>
      <when value="beginning" />
      <when value="collection">
      	<param format="sam" name="existingAlignmentFile" type="data" label="SAM alignment file containing initial alignment (-w)" />
      </when>
      <when value="filtering">
      	<param format="sam" name="existingAlignmentFile" type="data" label="SAM alignment file containing initial alignment (-w)" />
      	<param format="sam" name="existingHalfmapFile" type="data" label="SAM alignment file containing half-mapping reads (-e)" />
      </when>
      <when value="assembly">
      	<param format="sam" name="existingAlignmentFile" type="data" label="SAM alignment file containing initial alignment (-w)" />
      	<param format="sam" name="existingHalfmapFile" type="data" label="SAM alignment file containing half-mapping reads (-e)" />      	
      </when>
      <when value="alignment">
      	<param format="fasta" name="existingContigsFile" type="data" label="FASTA file containing contigs (-c)" /> 
      </when>
    </conditional>
  </inputs>
  
  <outputs>
    <data format="txt" name="outputFile" label="IntronPoly alignment results" />
  </outputs>
  
  <tests>
  </tests>
  
  <help>
  	Runs the ip_handler.pl script.
  </help>
</tool>
